1. EMP 테이블의 구조와 데이터가 동일하게 EMP학번 테이블 생성
>Create Table emp201507046
AS
Select *
From emp;
--------------------------------------------------------------------------

2. EMP학번 테이블에서 SMITH의 직무가 CLERK이면 급여를 15%,
 SALESMAN이면 10%, ANALYST이면 8% 인상하고,
 그렇지 않으면 5% 인상시키는 PL/SQL 블록 작성 

1) emp학번 테이블로부터 SMITH의 급여와 직무 확인
>Select job, sal
From emp201507046
Where ename = 'SMITH';

2) 블록 생성 및 실행
>DECLARE
	v_job emp201507046.job%TYPE;
	v_sal emp201507046.sal%TYPE;
BEGIN
	Select job, sal
	Into v_job, v_sal
	From emp201507046
	Where ename = 'SMITH';
	
	IF v_job = 'CLERK' THEN
		v_sal := v_sal * 1.15;
	ELSIF v_job = 'SALESMAN' THEN
		v_sal := v_sal * 1.1;
	ELSIF v_job = 'ANALYST' THEN
		v_sal := v_sal * 1.08;
	ELSE
		v_sal := v_sal * 1.05;
	END IF;
	
	Update emp201507046
	Set sal = v_sal
	Where ename = 'SMITH';
END;
/

3) 블록 실행한 결과(emp학번 테이블로부터 SMITH의 급여) 확인
>Select sal
From eme201507046
Where ename = 'SMITH';

4) emp학번 테이블의 수정 사항을 모두 무효화
>ROLLBACK

5) emp학번 테이블로부터 SMITH의 급여 확인
>Select sal
From eme201507046
Where ename = 'SMITH';
--------------------------------------------------------------------------

3. emp학번 테이블로부터 SCOTT의 연봉((급여+커미션) * 12)을 구하여,
 이름, 급여, 연봉을 아래에 주어진 출력화면에서처럼 
화면에 출력하는 블록 작성(커미션이 NULL인 경우에는 0으로 계산한다.)
(%ROWTYPE 사용)

1) 블록 생성 및 실행
>DECLARE
	v_salary emp201507046.sal%TYPE;
	v_emp201507046 emp201507046%ROWTYPE;
BEGIN
	Select *
	Into v_emp201507046;
	From emp201507046
	Where ename = 'SCOTT';

	IF emp201507046.comm IS NULL THEN
		v_emp201507046.comm := 0;
	END IF;
	
	v_salary := (v_emp201507046.sal +
			v_emp201507046.comm) * 12;
	
	dbms_output.put_line('사번 / 이름 / 급여 / 연봉');
	dmbs_output.put_line('--------------------------------------------');
	dmbs_output.put_line(v_emp201507046.empno ||
				'	' ||
				v_emp201507046.ename ||
				'	' ||
				v_emp201507046.sal ||
				v_salary);
END;
/
--------------------------------------------------------------------------

4. emp학번 테이블로부터 부서번호가 20인 사원들의 comm을 NULL 로 수정하고,
한 개의 행(empno=8888, ename=HON, job=CLERK, mgr=7566,
hiredate=sysdate, sal=2000, comm=500, deptno=10)
을 입력한 후 부서번호가 40인 행을 모두 삭제하여,
전체 행의 개수를 화면에 출력하는 블록 작성

1) emp학번 테이블의 모든 정보를 확인한다.
>Select *
From emp201507046;

2) 블록 생성 및 실행
>DECLARE
	v_count NUMBER(3);
BEGIN
	Update emp201507046
	Set comm = NULL
	Where deptno = 20;

	Insert Into emp201507046 Values
	(8888, 'HON', 'CLERK', 7566, sysdata, 2000, 500, 10);

	Delete emp201507046
	Where detpno = 40;

	Select COUNT(*)
	Into v_count
	From emp201507046;

	dbms_output.put_line('전체 행의 개수 : ' || v_count);
END;
/

3) 블록 실행한 결과 확인(emp학번 테이블의 모든 내용 조회)
>Select *
From emp201507046;

4) emp학번 테이블의 수정 사항 모두 무효화
>ROLLBACK;

5) emp학번 테이블의 모든 내용 확인
>Select *
From emp201507046;
















