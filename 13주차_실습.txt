1. 1) CUST학번 이름으로 아래의 테이블을 생성하여라. (고객 테이블)
Create Table cust201507046(
no number(3) Not Null,
name varchar2(10),
flag number(1),
addr varchar2(30),
phone varchar2(13),
Primary Key(no)
);

DESC cust201507046;


2) 치환변수를 사용하여 아래와 같이 데이터를 입력하고, 입력된 데이터를 확인하여라.
INSERT INTO cust201507046 Values(&no, '&name', &flag, '&addr', '&phone');


--------------------------------------------------------------------------------------------
2. 1) VIDEO학번 이름으로 아래의 테이블을 생성하여라. (비디오 테이블)
Create Table video201507046(
vdono number(3) Not Null,
vdoname varchar2(20),
vdoactor varchar2(30),
vdogroup varchar2(10),
Primary Key(vdono)
);

DESC video201507046;


2) 치환변수를 사용하여 아래와 같이 데이터를 입력하고, 입력된 데이터를 확인하여라.
INSERT INTO video201507046 Values(&vdono, '&vdoname', '&vdoactor', '&vdogroup');


--------------------------------------------------------------------------------------------
3. 1) RENT학번 이름으로 아래의 테이블을 생성하여라. (대여 테이블)
Create Table rent201507046(
rno number(3) Not Null,
rdate date,
rrtdate date,
no number(3),
rlatefee number(5),
rrentfee number(5),
vdono number(3),
Primary Key(rno),
Constraint rent201507046_no_fk Foreign Key(no)
References cust201507046(no),
Constraint rent201507046_vdono_fk Foreign Key(vdono)
References video201507046(vdono)
);

DESC rent201507046;


2) 치환변수를 사용하여 아래와 같이 데이터를 입력하고, 입력된 데이터를 확인하여라.
INSERT INTO rent201507046 Values(&rno, '&rrtdate', '&rlatefee', &no, &rlatefee, &rrentfee, &vdono);

Select * From rent201507046;
--------------------------------------------------------------------------------------------
4. 1) 고객(cust학번) 테이블에 마일리즈 칼럼(mil)을 num(5)로 추가하고, 구조를 확인하여라.
Alter Table cust201507046
Add mil number(5);

DESC cust201507046;

2) 비디오 샵에 마일리지 제도를 도입하기 위해, 고객의 등급별로 차등하여 마일리지를
계산하는 함수를 작성하여라.(고객번호와 대여금 입력)
Create OR REPLACE FUNCTION f1_201507046_0528(v_no number, v_rrentfee number)RETURN number
IS
	v_flag cust201507046.flag%TYPE;
	v_mil cust201507046.mil%TYPE;
BEGIN
	Select flag
	Into v_flag
	From cust201507046
	Where no = v_no;

	IF v_rrentfee >= 500 THEN
		IF v_flag = 1 THEN
			v_mil := v_rrentfee * 0.1;
		ELSIF v_flag = 2 THEN
			v_mil := v_rrentfee * 0.07;
		ELSIF v_flag = 3 THEN
			v_mil := v_rrentfee * 0.03;
		END IF;
	ELSE	
		v_mil := 0;
	END IF;
RETURN TRUNC(v_mil);
END;
/

3) 고객번호 101 이면서 금액이 1000을 입력하고, 결과를 확인하여라.
VARIABLE MIL NUMBER
EXEC :MIL := f1_201507046_0528(101, 1000);

4) 고객번호 102 이면서 금액이 1000을 입력하고, 결과를 확인하여라.
VARIABLE MIL NUMBER
EXEC :MIL := f1_201507046_0528(102, 1000);

5) 고객번호 103 이면서 금액이 1000을 입력하고, 결과를 확인하여라.
VARIABLE MIL NUMBER
EXEC :MIL := f1_201507046_0528(103, 1000);

6) 고객번호 104 이면서 금액이 1000을 입력하고, 결과를 확인하여라.
VARIABLE MIL NUMBER
EXEC :MIL := f1_201507046_0528(104, 1000);

7) 고객번호 104 이면서 금액이 400을 입력하고, 결과를 확인하여라.
VARIABLE MIL NUMBER
EXEC :MIL := f1_201507046_0528(104, 400);


--------------------------------------------------------------------------------------------
5. 1) 4번 문제의 함수를 이용하여 기존 데이터에 대한 고객 개인별 마일리지를 계산하여
   고객(cust학번)테이블의 마일리즈(mil) 칼럼에 넣는 프로시저를 작성하여라.
Create OR REPLACE PROCEDURE p1_201507046_0528
IS
	v_mil cust201507046.mil%TYPE;
	v_no rent201507046.no%TYPE;
	v_rrentfee rent201507046.rrentfee%TYPE;
	CURSOR sangwon IS
	Select no, rrentfee
	From rent201507046;
BEGIN	
	OPEN sangwon;
	LOOP
	 FETCH sangwon INTO v_no, v_rrentfee;
	 EXIT WHEN sangwon%NOTFOUND;
		Select mil
		Into v_mil
		From cust201507046
		Where no = v_no;

		IF v_mil IS NULL THEN
			Update cust201507046
			Set mil = 0
			Where no = v_no;
		END IF;	
	
		v_mil := f1_201507046_0528(v_no, v_rrentfee);
		Update cust201507046
		Set mil = mil + v_mil
		Where no = v_no;
	END LOOP;
CLOSE sangwon;
END;
/

2) 프로시저를 실행하고, 결과를 확인하여라.
EXEC p1_201507046_0528;

Select * From cust201507046;


--------------------------------------------------------------------------------------------
6. 고객번호, 비디오번호, 대여료를 입력받아서, 프로시저를 실행하면
 대여(rent학번) 테이블에  새로운 대여 데이터가 입력되게 하는 프로시저를 작성하여라. 

1) 50부터 시작하는 시퀀스(seq1학번)를 생성하여라.
Create sequence rent201507046__rno
START WITH 50
INCREMENT BY 1;


2) 고객번호, 비디오번호, 대여료를 입력받아서, 프로시저를 실행하면
 대여(rent학번) 테이블에  새로운 대여 데이터가 입력되게 하는 프로시저를 생성하여라.
Create OR REPLACE PROCEDURE p2_201507046_0528(v_no number, v_vdono number, v_rrentfee number)
IS
	v_mil cust201507046.mil%TYPE;
	v_rdate date := sysdate;
	r_rrtdate date := sysdate + 3;
	moneyerror EXCEPTION;
BEGIN
	v_mil := f1_201507046_0528(v_no, v_rrentfee);
	IF v_rrentfee = 500 OR v_rrentfee = 1000 OR v_rrentfee = 1500 THEN
		INSERT INTO rent201507046
		Values(rent201507046__rno.NEXTVAL, v_rdate, r_rrtdate, v_no, 0, v_rrentfee, v_vdono);	
		UPDATE cust201507046
		Set mil = mil + v_mil
		Where no = v_no;	
	ELSE	
		RAISE moneyerror;
	END IF;
EXCEPTION
	WHEN moneyerror THEN
		dbms_output.put_line('금액 오류입니다.');
END;
/
	

3) 고객번호 101, 비디오번호 5, 대여료 500을 입력받아 프로시저를 실행하고, cust학번 
   테이블과 rent학번 테이블의 결과를   확인하여라.
EXEC p2_201507046_0528(101, 5, 500);

4) 고객번호 104, 비디오번호 6, 대여료 3000을 입력받아 프로시저를 실행하고, 결과를 확인하여라.
EXEC p2_201507046_0528(104, 6, 3000);


--------------------------------------------------------------------------------------------
7. 1) 고객(cust학번) 테이블에 연체료합(sumrlatefee)과 연체료정산(amount) 칼럼을 
      num(10)으로 추가하고 구조를 확인하여라.
Alter Table cust201507046
Add sumrlatefee number(10);

Alter Table cust201507046
Add amount number(10);

2) 현재 대여(rent학번) 테이블에서 고객별로 연체료(rratefee)의 합을 구하여 
   cust학번 테이블의 sumrlatefee에 넣는 프로시저 생성
Create OR REPLACE PROCEDURE p3_201507046_0528
IS
	v_no rent201507046.no%TYPE;
	v_rlatefee rent201507046.rlatefee%TYPE;
	v_flagnull number(10);
	CURSOR sangwon IS
	Select no, rlatefee
	From rent201507046;
BEGIN
	OPEN sangwon;
	LOOP
	 EXIT WHEN sangwon%NOTFOUND;
	 FETCH sangwon INTO v_no, v_rlatefee;
		Select sumrlatefee
		Into v_flagnull
		From cust201507046
		Where no = v_no;
	
		IF v_flagnull IS NULL THEN
			Update cust201507046
			Set sumrlatefee = 0
			Where no = v_no;
		END IF;
		
		Update cust201507046
		Set sumrlatefee = sumrlatefee + v_rlatefee
		Where no = v_no; 		
	END LOOP;
CLOSE sangwon;
END;
/

3) 프로시저를 실행하고 결과를 확인
EXEC p3_201507046_0528;

Select * From cust201507046;

4) 고객번호와 지불 연체료를 입력받아 고객의 연체료정산(amount) 금액을 수정하고,
   매개변수를 사용하여 연체료 잔액을 확인하는 프로시저를 작성하여라.
   (연체료 합과 연체료 정산이 같으면 “연체료가 모두 정산 되었습니다”라는 메시지 출력)
Create OR REPLACE PROCEDURE p4_201507046_0528(v_no number, v_rlatefee number)
IS
	v_amount cust201507046.amount%TYPE;
	v_sumrlatefee cust201507046.sumrlatefee%TYPE;
BEGIN
	Select sumrlatefee ,amount
	Into v_sumrlatefee, v_amount
	From cust201507046
	Where no = v_no;

	IF v_sumrlatefee = 0 THEN
		RAISE okmoney;
	ELSE
		Update cust201507046
		Set amount = amount + v_rlatefee
		Where no = v_no;
	END IF;
END;
/
	
5) 고객(cust학번) 테이블의 amount 칼럼의 값을 모두 0 으로 넣어라.
Update cust201507046
Set amount = 0;

6) 결과를 확인하여라.
Select * From cust201507046;

7) 고객번호 101, 지불 연체료 500을 입력받아 프로시저를 실행하고 결과를 확인하여라.
EXEC p4_201507046_0528(101, 500);
    
8) 고객번호 104, 지불 연체료 1000을 입력받아 프로시저를 실행하고 결과를 확인하여라.
EXEC p4_201507046_0528(104, 1000);
   
9) 고객(cust학번) 테이블의 데이터를 확인하여라.
Select * From cust201507046;
	
	
EXEC p4_201507046_0528(10, 1000);
	
	
EXEC p4_201507046_0528(104, 2500);






















