1. EMP학번 테이블에서 직무가 CLERK이면 급여를 15%, SALESMAN이면 10%, ANALYST이면 8% 인상하고, 그렇지 않으면 5% 인상시키는 PL/SQL 프로시저 작성 (커서 이용)

1) emp학번 테이블로부터 모든 사원의 이름과 급여 확인
>Select * From emp201507046

2) 프로시저 생성
Create OR REPLACE PROCEDURE p_one
IS
	v_empno emp201507046.empno%TYPE;
	v_job emp201507046.job%TYPE;
	v_sal emp201507046.sal%TYPE;
	CURSOR emp_cursor IS
	Select empno, job, sal
	From emp201507046;
BEGIN
	OPEN emp_cursor;
	LOOP
		FETCH emp_cursor INTO v_empno, v_job, v_sal;
	IF v_job =  'CLERK' THEN
		v_sal := v_sal * 1.15;
	ELSIF v_job = 'SALRESMAN' THEN
		v_sal := v_sal * 1.1;
	ELSIF v_job = 'ANALYST' THEN
		v_sal := v_sal * 1.08;
	ELSE
		v_sal := v_sal * 1.05;
	END IF;
		Update emp201507046
		Set sal = v_sal
		Where empno = v_empno;
		EXIT WHEN emp_cursor%NOTFOUND;
	END LOOP;
CLOSE emp_cursor;
END;
/

3) 프로시저 실행
>EXECUTE p_one

4) 프로시저 결과 확인
>Select * From emp201507046

5) emp학번 테이블의 수정 사항을 모두 무효화
>ROLLBACK

6) emp학번 테이블로부터 이름과 급여 확인
>Select * From emp201507046


2. 테이블 EMP학번을 기본으로 SAL의 값을 변경하여 RESAL학번 테이블을 작성하는 PL/SQL 프로시저를 작성하여라.


1) 테이블 RESAL학번 생성
Create Table resal201507046(
no number(4),
name varchar2(10),
salary number(7,2),
resalary number(8,2),
dept number(2)
)

2) 커서를 이용하여 다음과 같은 조건을 만족하는 프로시저 작성(커서 이용)
   *** 조건 ***
. EMP학번 테이블로부터 deptno=10 이면 resalary=sal*1.1의 상태로 입력
. EMP학번 테이블로부터 deptno=20 이면 resalary=sal*1.2의 상태로 입력
. EMP학번 테이블로부터 deptno=30 이면 resalary=sal*1.3의 상태로 입력
. EMP학번 테이블로부터 deptno=40 이면 resalary=sal*1.4의 상태로 데이터를 입력한다.

Create OR REPLACE PROCEDURE p_two
IS
	v_emp emp201507046%ROWTYPE;
	v_resalary resal201507046.resalary%TYPE;
	CURSOR emp_cursor IS
	Select *
	From emp201507046;
BEGIN
	OPEN emp_cursor;
	LOOP
		FETCH emp_cursor INTO v_emp;
	IF v_emp.deptno = 10 THEN 
		v_resalary := v_emp.sal * 1.1;
	ELSIF v_emp.deptno = 20 THEN
		v_resalary := v_emp.sal * 1.2;
	ELSIF v_emp.deptno = 30 THEN
		v_resalary := v_emp.sal * 1.3;
	ELSIF v_emp.deptno = 40 THEN
		v_resalary := v_emp.sal * 1.4;
	END IF;
		Insert Into resal201507046
		Values(v_emp.empno, v_emp.ename, v_emp.sal,
		v_resalary, v_emp.deptno);
		EXIT WHEN emp_cursor%NOTFOUND;
	END LOOP;
CLOSE emp_cursor;
END;
/

3) 프로시저 실행
EXECUTE p_two;

4) 실행시킨 결과 확인
Select * From resal201507046;

5) emp학번 테이블의 데이터 조회
>Select * From emp201507046

3. 테이블 EMP로부터 커미션이 NULL이 아닌 사원의 사원번호, 이름, 급여를 이름 기준 오름차순으로 정렬한 결과를 화면에 출력하는 블록을 작성하여라.

1) 블록 생성
DECLARE
	v_emp emp201507046%ROWTYPE;
	CURSOR emp_cursor IS
	Select *
	From emp201507046
	Order By ename;
BEGIN
	OPEN emp_cursor;
	dbms_output.put_line('사원번호   //   이름   //  급여 ');
	FOR i IN 1..14 LOOP
		FETCH emp_cursor INTO v_emp;
	IF v_emp.comm IS NOT NULL  THEN
		dbms_output.put_line(v_emp.empno || '  ' || v_emp.ename
		 || '  ' || v_emp.sal);
	END IF;
	END LOOP;
CLOSE emp_cursor;
END;
/

2) 블록 실행
/

3) 실행 결과 확인

























