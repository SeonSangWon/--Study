트리거

문장 레벨의 트리거 : 설정된 테이블에 대해 DML을 사용할 때 한 번만 실행
행 레벨의 트리거 : DML에 의해 여러 행이 변경된다면 각 행이 변경될 때마다 실행
>> [UPDATE문으로 인해 5행이 변경되야한다면 5번 수행된다]

BEFORE : 이벤트가 발생 전에 트리거를 실행 
>> [SQL문을 입력하면 트리거를 체크 후 결과 출력]
AFTER : 이벤트 발생 후에 트리거를 실행
>> [SQL문을 입력하면 트리거를 수행]


트리거의 구조 : 
Create [OR REPLACE] TRIGGER 트리거명
{BEFORE | AFTER} 이벤트 {or 이벤트 or 이벤트 ....} 	//INSERT OR DELETE
ON 테이블명
[FRR EACH ROW] = 행 레벨의 트리거 사용할 때 사용
[WHEN 조건] = 행 레벨의 트리거에서만 사용
DECLARE
	선언부
BEGIN
	실행부
[EXCEPTION]
	예외처리부
END;


IF조건문 사용 시 : 
INSERT = Inserting
UPDATE = Updating
DELETE = Deleting

새로 들어오는 데이터명 : :new.칼럼명
원래 있는 데이터명 : :old.칼럼명

INSERT
INSERT INTO 테이블명(모든칼럼명) 
VALUES(:new.칼럼명, .. ..);

UPDATE
INSERTE INTO 테이블명(모든칼럼명) 
VALUES(:new.칼럼명, .. .. , :old.칼럼명, .. .. );

DELETE
INSERT INTO 테이블명(칼럼명)
VALUSE(:old.칼럼명, :old.칼럼명);

--------------------------------------------------------------------
테이블 생성

CREATE TABLE 테이블명 
(칼럼명 datatype [, 칼럼명 datatype,....,] );


데이터 무결성 제약조건(Constraints) 개념
- 테이블 생성 시에 각 칼럼에 대해 정의하는 규칙 
- 테이블에 유효하지 않은 부적절한 데이터가 입력되는 것을 방지 
- 데이터의 삽입, 수정, 삭제 시 적용
- 제약조건의 유형
NOT NULL
UNIQUE
PRIMARY KEY
FOREIGN KEY
CHECK

--------------------------------------------------------------------
시퀀스(SEQUENCE)
- 순차적인 숫자 값을 자동으로 생성되게 하기 위한 오라클  객체
- 주로 일차 값을 생성할 때, 아주 많은 데이터를 규칙성 있게 삽입할 때 사용

CREATE SEQUENCE 시퀀스명 
	[INCREMENT BY n] 
	[START WITH n] 
	[MAXVALUE n|NOMAXVALUE] 
	[MINVALUE n|NOMINVALUE] 
	[CYCLE|NOCYCLE] 
	[CACHE n|NOCACHE]; 

CYCLE : MAXVALUE까지 갈 경우 다시 처음으로 갈 것인가.
※primary key에 시퀀스를 줄 경우 데이터가 중복될 수 있다[CYCLE]
※모든 속성은 별도의 표기가 없을 경우 Default값이 들어간다
- NEXTVAL : 현재 시퀀스의 사용 가능한 다음 값
- CURRVAL : 시퀀스의 현재 값















