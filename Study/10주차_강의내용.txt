1. STUDENT 이름으로 아래의 테이블을 생성하고 구조를 확인하여라.
Create Table student(
no char(9) NOT NULL,
name varchar2(12),
dept varchar2(20),
grade number(1),
class char(1),
gender char(1),
height number(5,2),
weight number(5,2),
Primary Key(no)
);

DESC student;

------------------------------------------------------------------------------------------------------
2. 치환변수를 사용하여 아래와 같이 데이터를 입력하고, 입력된 데이터를 확인하여라.
INSERT INTO student
VALUES(&no, '&name', '&dept', &grade, '&class', '&gender', &height, &weight);

Select * From student;

------------------------------------------------------------------------------------------------------
3. 1) 컴퓨터정보과 학생들 중에서 학번과 학년을  입력하면 학생의 이름을 출력하고,
      학생이름을 입력하면  학번과 학년을 출력하는 프로시저를 같은 이름으로 작성하여 패키지로 생성하여라.


Create OR REPLACE PACKAGE pack_sangwon1
IS
v_dept varchar(20);
PROCEDURE p_student(v_no number, v_grade number);
PROCEDURE p_student(v_name varchar);
END;
/

-----------------------------
Create OR REPLACE PACKAGE BODY pack_sangwon1
IS
PROCEDURE p_student(v_no number, v_grade number)
IS
	v_name student.name%TYPE;
BEGIN
	Select name
	Into v_name
	From student
	Where dept = v_dept AND no = v_no AND grade = v_grade;
	dbms_output.put_line('학생 이름 : ' || v_name);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	dbms_output.put_line('컴퓨터정보과에 ' || v_name || '학생이 없습니다.');
END;
PROCEDURE p_student(v_name varchar)
IS
	v_no student.no%TYPE;
	v_grade student.grade%TYPE;
BEGIN
	Select no, grade
	Into v_no, v_grade
	From student
	Where dept = v_dept AND name = v_name;
	dbms_output.put_line('학생 학번 : ' || v_no);
	dbms_output.put_line('학생 학년 : ' || v_grade);
EXCEPTION
	WHEN NO_DATA_FOUND THEN
	dbms_output.put_line('컴퓨터정보과에 ' || v_name || '학생이 없습니다.');
END;
BEGIN
	v_dept := '컴퓨터정보';
END;
/

-----------------------------
2) 학번 20131001, 학년 3을 입력하여 패키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon1.p_student(20131001,3);

3) 학번 20131001, 학년 2를 입력하여 패키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon1.p_student(20131001,2);

4) 이름 김종헌을 입력하여 패키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon1.p_student('김종헌');

5) 이름 김상헌을 입력하여 패키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon1.p_student('김상헌');

------------------------------------------------------------------------------------------------------
4. 1) 학번과 학년을 입력받아서 입력된 학번에 해당하는 학생의 학년을 입력된 학년으로 수정하는 프로시저와
      이름을 입력받아서 입력된 학생의 체력등급을 반환하는 함수를 작성하여 패키지로 생성하여라.

Create OR REPLACE PACKAGE pack_sangwon2
IS
PROCEDURE student(v_no number, v_grade number);
FUNCTION student(v_name varchar)RETURN varchar;
END;
/

-----------------------------
Create OR REPLACE PACKAGE BODY pack_sangwon2
IS
PROCEDURE student(v_no number, v_grade number)
IS
BEGIN
	Update student
	Set grade = v_grade
	Where no = v_no;
END;
FUNCTION student(v_name varchar)RETURN varchar
IS
	v_height number(5,2);
	v_weight number(5,2);
	v_hp char(1);
BEGIN
	Select height, weight
	Into v_height, v_weight
	From student
	Where name = v_name;
	IF v_weight <= v_height-110 THEN
		v_hp := 'A';
	ELSIF  v_weight < v_height-105 THEN
		v_hp := 'B';
	ELSIF v_weight < v_height-100 THEN
		v_hp := 'C';
	ELSIF v_weight < v_height-95 THEN
		v_hp := 'D';
	ELSIF v_weight > v_height-95 THEN
		v_hp := 'F';
	END IF;
RETURN v_hp;
END;
END;
/

-----------------------------
2) 학번 20131001, 학년 2를 입력하여 패키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon2.student(20131001, 2);

3) 이름 옥한빛을 입력하여 패키지를 실행하고, 결과를 확인하여라.
VARIABLE GRADE CHAR(1)
EXEC :GRADE := pack_sangwon2.student('옥한빛');

PRINT GRADE;

4) 이름 심수정을 입력하여 패키지를 실행하고, 결과를 확인하여라.
VARIABLE GRADE CHAR(1)
EXEC :GRADE := pack_sangwon2.student('심수정');

PRINT GRADE;

------------------------------------------------------------------------------------------------------
5. 1) 학과를 입력하면 입력한 학과에 속하는 학생들의 학번, 이름을 출력하고,
      학년을 입력하면 입력한 학년에 해당하는 학생들의 학번과 이름을 출력하는 프로시저를
      같은 이름으로 작성하여 패키지로 처리하여라.

Create OR REPLACE PACKAGE pack_sangwon3
IS
PROCEDURE student(v_dept varchar);
PROCEDURE student(v_grade number);
END;
/

-----------------------------
Create OR REPLACE PACKAGE BODY pack_sangwon3
IS
PROCEDURE student(v_dept varchar)
IS
	v_no char(9);
	v_name varchar2(12);
	CURSOR student_cursor IS
	Select no, name
	From student
	Where dept = v_dept;
BEGIN
	OPEN student_cursor;
	LOOP
		FETCH student_cursor INTO v_no, v_name;
		EXIT WHEN student_cursor%NOTFOUND;
	dbms_output.put_line(v_dept || '과 학생 학번 : ' || v_no);
	dbms_output.put_line(v_dept || '과 학생 이름 : ' || v_name);
	END LOOP;
CLOSE student_cursor;
END;
PROCEDURE student(v_grade number)
IS
	v_no char(9);
	v_name varchar2(12);
	CURSOR student_cursor IS
	Select no, name
	From student
	Where grade = v_grade;
BEGIN
	OPEN student_cursor;
	LOOP
		FETCH student_cursor INTO v_no, v_name;
		EXIT WHEN student_cursor%NOTFOUND;
	dbms_output.put_line('학생 학번 : ' || v_no);
	dbms_output.put_line('학생 이름 : ' || v_name);		
	END LOOP;
END;
END;
/

----------------------------------------
2) 컴퓨터정보를 입력하여 페키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon3.student('컴퓨터정보');

3) 학년 2를 입력하여 페키지를 실행하고, 결과를 확인하여라.
EXEC pack_sangwon3.student(2);
































