1. DEPT 테이블의 구조와 데이터가 동일하게 DEPT학번 테이블 생성
Create Table dept201507046
AS
Select *
From dept;

2. SALGRADE 테이블의 구조와 데이터가 동일하게 SALGRADE학번 테이블 생성
Create Table salgrade201507046
AS
Select *
From salgrade;

3 EMP학번 테이블에서 기존의 부서번호를 새로운 부서번호로 변경하는 프로시저 작성
조건 : 부서번호가 10, 20, 30인 경우 기존의 부서번호 + 10으로 변경 
         부서번호가 40인 경우 부서번호를 10으로 변경

1) EMP학번 테이블의 모든 데이터 조회
Select *
From emp201507046;

2) 프로시저 작성
CREATE OR REPLACE PROCEDURE p_one
IS
BEGIN
	Update emp201507046
	Set deptno = 10
	Where deptno = 40;
	Update emp201507046
	Set deptno = deptno + 10;
END;
/

3) 프로시저 실행
EXECUTE p_one;

4) 프로시저 결과 확인
Select *
From emp201507046;

5) EMP학번 테이블의 수정 사항 모두 무효
ROLLBACK;

6) EMP학번 테이블의 모든 데이터 조회
Select *
From emp201507046;

4. EMP학번 테이블과 DEPT학번 테이블을 이용해서 사원 이름을 입력하면 부서명을 출력하는 함수 작성 

1) 함수 생성
CREATE OR REPLACE FUNCTION f_one(v_ename VARCHAR2) RETURN VARCHAR
IS
	v_dname VARCHAR2(20);
BEGIN
	Select dname
	Into v_dname
	From dept201507046
	Where deptno = (Select deptno
			From emp201507046
			Where ename = v_ename);
RETURN(v_dname);
END f_one;
/

2) SMITH를 입력받아 함수 실행
VARIABLE ENAME VARCHAR2(20)
EXEC :ENAME := f_one('SMITH');

3) 함수 실행 결과 확인
PRINT ENAME;

5. EMP학번 테이블을 이용해서 사원 이름을 입력받아 그 사원의 직무가 CLERK이면 급여를 15%, SALESMAN이면 10%, ANALYST이면 8% 인상하고, 그렇지 않으면 5% 인상시키는 프로시저 작성

1) EMP학번 테이블의 모든 내용 확인
Select *
From emp201507046;

2) 프로시저 작성
CREATE OR REPLACE PROCEDURE p_two(v_ename VARCHAR)
IS
	v_job emp201507046.job%TYPE;
	v_sal emp201507046.sal%TYPE;
BEGIN
	Select job, sal
	Into v_job, v_sal
	From emp201507046
	Where ename = v_ename;
	IF v_job = 'CLERK' THEN
		v_sal := v_sal * 1.15;
	ELSIF v_job = 'SALESMAN' THEN
		v_sal := v_sal * 1.1;
	ELSIF v_job = 'ANALYST' THEN
		v_sal := v_sal * 1.08;
	ELSE
		v_sal := v_sal * 1.05;
	END IF;
	Update emp201507046
	Set sal = v_sal
	Where ename = v_ename;
END;
/

3) SMITH를 입력받아 프로시저 실행
VARIABLE ENAME VARCHAR2
EXEC p_two('SMITH');

4) 프로시저 실행 결과 확인
Select sal
From emp201507046
Where ename = 'SMITH';

5) EMP학번 테이블의 수정 사항 모두 무효화
ROLLBACK;

6) EMP학번 테이블에서 SMITH 의 급여 조회
Select sal
From emp201507046
Where ename = 'SMITH';

6. EMP학번 테이블, SALGRADE학번 테이블을 이용해서 사원 이름을 입력받아 그 사원의 
   급여 등급을 출력(OUT 매개변수 사용)하는 프로시저 작성

1) 프로시저 작성
CREATE PROCEDURE p_three(v_ename VARCHAR, v_grade OUT VARCHAR)
IS
	v_sal emp201507046.sal%TYPE;
BEGIN
	Select sal
	Into v_sal
	From emp201507046
	Where ename = v_ename;

	Select grade
	Into v_grade
	From salgrade201507046
	Where v_sal > LOSAL AND v_sal < HISAL;	
END;
/


2) SMITH를 입력받아 프로시저 실행
VARIABLE grade VARHCAR2
EXEC p_three('SMITH', :grade)
/


3) 프로시저 실행 결과 확인
PRINT grade;

7. EMP학번 테이블에서 최고급여를 받는 사원의 이름을 출력하는 함수 작성 

1) 함수 생성
CREATE OR REPLACE FUNCTION f_two RETURN VARCHAR
IS
	v_ename emp201507046.ename%TYPE;
BEGIN
	Select ename
	Into v_ename
	From emp201507046
	Where sal = (Select MAX(sal)
			From emp201507046);
RETURN(v_ename);
END f_two;
/

2) 함수 실행
VARIABLE ENAME VARCHAR2(20)
EXEC :ENAME := f_two;

3) 함수 실행 결과 확인
PRINT ENAME;



































